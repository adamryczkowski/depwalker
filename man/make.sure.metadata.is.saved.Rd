% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_metadata.R
\name{make.sure.metadata.is.saved}
\alias{make.sure.metadata.is.saved}
\alias{save.metadata}
\title{Makes sure, the task's metadata is saved to disk.}
\usage{
make.sure.metadata.is.saved(metadata)

save.metadata(metadata)
}
\arguments{
\item{metadata}{metadata object that you want to make sure is saved on disk.}
}
\value{
returns either the \code{metadata} parameter, or if equivalent task's metadata is found on disk,
  it returns the saved metadata.
}
\description{
For \code{make.sure.metadata.is.saved} if the equivalent metadata is already present on disk,
it assumes the saved metadata contains more detailed optional
information and instead of saving the \code{metadata} parameter, it returns to old one instead.
If exists metadata on disk with the same name, but not equivalent (e.g. with different objectrecords or
R code) it gets silently overwritten.
}
\details{
The \code{save.metadata} function always saves the task's metadata, even if the equivalent file
already exists.

The file's format is \emph{yaml}, and it is written specified filename but with
custom extension given by the option \code{getOption('metadata.save.extension')}.
}
\section{Functions}{
\itemize{
\item \code{save.metadata}: unconditionally saves the metadata on disk.
}}
\seealso{
\code{\link{save.metadata}} - unconditionally saves task's metadata on disk.
}

