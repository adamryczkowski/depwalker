% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_objects.R
\name{take.object.from.memory}
\alias{take.object.from.memory}
\title{Retrieves the object described by the task from memory.}
\usage{
take.object.from.memory(objectrecord, aliasname = NULL,
  flag.check.object.digest = TRUE, flag.dry.run = FALSE)
}
\arguments{
\item{objectrecord}{Object record, that describe this particular object to retrieve}

\item{flag.check.object.digest}{If set, it calculates MD5 hash of the object and compares it
with the objectrecord's. If mismatch, then no object is returned. Default \code{TRUE}}

\item{flag.dry.run}{If set, it leaves no side effects, just checks for the availability of the object.}

\item{alasname}{If set, it copies the retrieved object into new name.
R performs lazy copies with copy-on-write behaviour so unless you modify the original
object, this is memory efficient.}
}
\value{
\code{TRUE} if object is found and \code{FALSE} otherwise. If true, the object can be found
   in \code{.GlobalEnv} under the name \code{aliasname} if present, and original name.
}
\description{
It doesn't compute anything - it just makes sure, that the already-present
object residing in memory is a direct and unmodified result from the task run.
}

